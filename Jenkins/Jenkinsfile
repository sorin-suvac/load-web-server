pipeline {
    agent any

    stages {
        stage('Terraform apply') {
            steps {
                dir('Terraform') {
                    sh 'terraform init -no-color'
                    sh 'terraform plan -input=false -out my-plan -no-color'
                    sh 'terraform apply -input=false my-plan -no-color'
                    sh 'terraform show -no-color'
                }
            }
        }
        stage('Test ssh connection') {
            steps {
                dir('Terraform') {
                    script {
                        def master_ip = sh(
                            script: 'terraform output master_ip',
                            returnStdout: true
                        ).trim()
                        env.MASTER_IP = master_ip
                        echo "Master public IP: ${env.MASTER_IP}"
                    }
                }
            }
        }
        stage('Terraform destroy') {
            steps {
                dir('Terraform') {
                    sh 'terraform destroy -auto-approve -no-color'
                }
            }
        }
    }
}
