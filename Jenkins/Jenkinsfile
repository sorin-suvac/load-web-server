pipeline {

    environment {
        AWS_CREDENTIALS = '/mnt/c/Users/ssuva/.aws/credentials'
        SSH_KEY_FILE = 'aws-ssh-key.pem'
        MASTER_IP = ''
        WORKERS_IPS = ''
    }

    agent any

    stages {
        stage('Terraform apply') {
            steps {
                dir('Terraform') {
                    script {
                        sh 'terraform init -no-color'
                        sh 'terraform plan -input=false -var="aws_credentials=${AWS_CREDENTIALS}" -var="ssh_key_file=${SSH_KEY_FILE}" -out my-plan -no-color'
                        sh 'terraform apply -input=false my-plan -no-color'
//                         sh 'terraform show -no-color'
                        sh 'chmod 400 ${SSH_KEY_FILE}'
                        def res1 = sh(script: 'terraform output -raw master_ip', returnStdout: true)
                        MASTER_IP = res1
                        echo "MASTER_IP ${env.MASTER_IP}"
                        def jsonIPs = sh(script: 'terraform output -json worker_ips', returnStdout: true)
                        def jsonSlurper = new groovy.json.JsonSlurper()
                        def res2 = jsonSlurper.parseText(jsonIPs)
                        WORKERS_IPS = res2
                        echo "WORKERS_IPS ${env.WORKERS_IPS}"
                    }
                }
            }
        }
        stage('Install K8S') {
            steps {
                dir('Scripts') {
                    script {
                        def sshKey = "../Terraform/${env.SSH_KEY_FILE}"
                        sh 'scp -i ${sshKey} install-kubeadm.sh ubuntu@${MASTER_IP}:/tmp'
                        sh 'scp -i ${sshKey} init-kubeadm.sh ubuntu@${MASTER_IP}:/tmp'
                        sh 'ssh -i ${sshKey} ubuntu@${MASTER_IP} chmod +x /tmp/*.sh'
                        sh 'ssh -i ${sshKey} ubuntu@${MASTER_IP} /tmp/install-kubeadm.sh'
                        sh 'ssh -i ${sshKey} ubuntu@${MASTER_IP} /tmp/init-kubeadm.sh'
                        def kubeadmJoinCmd = sh(script: 'ssh -i $sshKey ubuntu@${MASTER_IP} kubeadm token create --print-join-command', returnStdout: true)
                        ${WORKERS_IPS}.each { workerIp ->
                            sh 'scp -i ${sshKey} install-kubeadm.sh ubuntu@${worker}:/tmp'
                            sh 'ssh -i ${sshKey} ubuntu@${workerIp} chmod +x /tmp/install-kubeadm.sh'
                            sh 'ssh -i ${sshKey} ubuntu@${workerIp} /tmp/install-kubeadm.sh'
                            sh 'ssh -i ${sshKey} ubuntu@${workerIp} sudo ${kubeadmJoinCmd} --v=5'
                        }
                    }
                }
            }
        }
//         stage('Terraform destroy') {
//             steps {
//                 dir('Terraform') {
//                     sh 'terraform destroy -auto-approve -no-color'
//                 }
//             }
//         }
    }
}
